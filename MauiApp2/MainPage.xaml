<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="MauiApp2.MainPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <!-- Style for Invalid Entry -->
            <Style x:Key="InvalidEntryStyle" TargetType="Entry">
                <Setter Property="BackgroundColor" Value="LightPink" />
                <Setter Property="TextColor" Value="Red" />
            </Style>

            <!-- Style for Valid Entry -->
            <Style x:Key="ValidEntryStyle" TargetType="Entry">
                <Setter Property="BackgroundColor" Value="LightGreen" />
                <Setter Property="TextColor" Value="Black" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout Margin="40,0"
                 VerticalOptions="CenterAndExpand">

        <!-- Phone Entry with Validation Behavior -->
        <Entry x:Name="PhoneEntry"
               HorizontalTextAlignment="Center"
               Placeholder="0112223333"
               HorizontalOptions="FillAndExpand">
            <Entry.Behaviors>
                <toolkit:CharactersValidationBehavior 
                InvalidStyle="{StaticResource InvalidEntryStyle}"
                ValidStyle="{StaticResource ValidEntryStyle}"
                Flags="ValidateOnValueChanged"
                CharacterType="Digit"
                MinimumCharacterTypeCount="5" />
            </Entry.Behaviors>
        </Entry>
        <Label x:Name="PhoneErrorLabel" 
               Text="Invalid Phone Number" 
               TextColor="Red" 
               IsVisible="False"/>

        <!-- Password Entry with Validation Behavior -->
        <Entry x:Name="PasswordEntry"
               HorizontalTextAlignment="Center"
               IsPassword="True"
               Placeholder="Password"
               HorizontalOptions="FillAndExpand">
 
                <Entry.Behaviors>
                    <toolkit:TextValidationBehavior 
                InvalidStyle="{StaticResource InvalidEntryStyle}"
                ValidStyle="{StaticResource ValidEntryStyle}"
                Flags="ValidateOnValueChanged"
                MinimumLength="6"
                MaximumLength="10" />
                </Entry.Behaviors>
            
        </Entry>
        <Label x:Name="PasswordErrorLabel" 
               Text="Password length should be greater than 5" 
               TextColor="Red" 
               IsVisible="False"/>

        <!-- Terms and Conditions -->
        <StackLayout Orientation="Horizontal"
                     HorizontalOptions="FillAndExpand" 
                     VerticalOptions="Center"
                     Margin="0,15">
            <CheckBox x:Name="TermsAndConditionsCheckbox"
                      HorizontalOptions="Start" />
            <Label x:Name="TermsAndConditionsLabel"
                   Text="I have read the terms and conditions"
                   TextColor="Black" 
                   FontSize="Small"
                   HorizontalOptions="Start"
                   Margin="5"/>
        </StackLayout>

        <!-- Register Button with MultiTrigger -->
        <Button x:Name="RegisterButton" 
                Text="Register"
                FontSize="Medium" 
                CornerRadius="20"
                VerticalOptions="EndAndExpand"
                HorizontalOptions="FillAndExpand" 
                IsEnabled="False">
            <Button.Triggers>
                <MultiTrigger TargetType="Button">
                    <MultiTrigger.Conditions>
                        <!-- Check if Phone Entry is valid -->
                        <BindingCondition Binding="{Binding Source={x:Reference PhoneEntry}, Path=Behaviors[0].IsValid}" 
                                  Value="True" />
                        <!-- Check if Password Entry is valid -->
                        <BindingCondition Binding="{Binding Source={x:Reference PasswordEntry}, Path=Behaviors[0].IsValid}" 
                                  Value="True" />
                        <!-- Check if Terms and Conditions checkbox is checked -->
                        <BindingCondition Binding="{Binding Source={x:Reference TermsAndConditionsCheckbox}, Path=IsChecked}" 
                                  Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True" />
                </MultiTrigger>
            </Button.Triggers>
        </Button>
    </StackLayout>

</ContentPage>
